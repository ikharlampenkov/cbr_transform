
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'cbr_transform'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'normalize'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
data-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "../build"  # directory which will store compiled SQL files
log-path: "../logs"  # directory which will store DBT logs
modules-path: "/tmp/dbt_modules"  # directory which will store external DBT dependencies

clean-targets:         # directories to be removed by `dbt clean`
    - "build"
    - "dbt_modules"

quoting:
  database: true
# Temporarily disabling the behavior of the ExtendedNameTransformer on table/schema names, see (issue #1785)
# all schemas should be unquoted
  schema: false
  identifier: true

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  cbr_transform:
    generated:
      airbyte_ctes:
        +tags: airbyte_internal_cte
        +materialized: ephemeral
      airbyte_views:
        +tags: airbyte_internal_views
        +materialized: view
      airbyte_tables:
        +tags: normalized_tables
        +materialized: table
    +materialized: table

vars:
  dbt_utils_dispatch_list: ['cbr_transform']

dispatch:
  - macro_namespace: dbt_utils
    search_order: ['cbr_transform', 'dbt_utils']
